# Fluent-bit yaml for sending logs to S3 Bucket 
# Add output to send logs to loki to Elasticsearch
# kubectl create secret generic fluentbit-s3-key --from-literal=AWS_ACCESS_KEY_ID=<REPLACE THE KAY ID HERE> --from-literal=AWS_SECRET_ACCESS_KEY=<REPLACE THE ACCESS KEY STRING HERE>

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: fluentbit
  labels:
    k8s-app: fluent-bit
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      app: fluent-bit
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: fluent-bit
        k8s-app: fluent-bit
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - env:
        - name: AWS_REGION
          value: us-east-1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: fluentbit-s3-key
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: fluentbit-s3-key
              key: AWS_SECRET_ACCESS_KEY
        image: 906394416424.dkr.ecr.ap-southeast-2.amazonaws.com/aws-for-fluent-bit:2.8.0
        imagePullPolicy: Always
        name: fluent-bit
        volumeMounts:
        - name: fluentbitconfigvol
          mountPath: /etc/fluent-bit/conf/
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        command: ["/fluent-bit/bin/fluent-bit"]
        args: ["-c", "/etc/fluent-bit/conf/fluent-bit.conf"]
      imagePullSecrets:
      - name: aws-registry
      volumes:
      - name: fluentbitconfigvol
        configMap:
          name: fluent-bit
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers

---


apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-read
  namespace: fluentbit
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments", "pods", "namespaces"]
  verbs: ["get", "list", "watch"]

----

apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
  namespace: fluentbit

----

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-read
  namespace: fluentbit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-read
subjects:
- kind: ServiceAccount
  name: fluent-bit
  namespace: fluentbit2S3

----

apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit
  namespace: fluentbit
  labels:
    app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Parsers_File parsers.conf

    @INCLUDE input-*.conf
    @INCLUDE output-*.conf

    @INCLUDE filters.conf
  
  parsers.conf: |
    [PARSER]
        Name        s3_logs
        Format      json
        Time_Key    requestReceivedTimestamp
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ
        Time_Keep   On
    
    [PARSER]
        Name        kubernetes-tag
        Format      regex
        Regex       (?<namespace_name>.+)\.(?<pod_name>.+)\.(?<container_name>.+)


  input-s3logs.conf: |
    [INPUT]
        Name              tail
        Tag               kube.<namespace_name>.<pod_name>.<container_name>
        Tag_Regex         (?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-
        Path              /var/log/containers/*.log
        Exclude_Path      /var/log/containers/*_fluentbit2S3_*.log
        Parser            s3_logs
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10


  output-s3.conf: |
    [OUTPUT]
        Name s3
        Match *
        bucket lokicheck
        region us-east-1
        use_put_object On
        s3_key_format /$TAG[1]/$TAG[3]/%Y/%m/%d/
        s3_key_format_tag_delimiters . 
        total_file_size 5M
        upload_timeout 1m
    
    [OUTPUT]
        Name  stdout
        Match *

  filters.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Regex_Parser        kubernetes-tag
        Labels              Off
        Annotations         Off
